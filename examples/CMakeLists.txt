cmake_minimum_required(VERSION 3.8)
project(splunk_hec_client_cpp)

set(CMAKE_CXX_STANDARD 14)
include_directories(${OPENSSL_ROOT_DIR}/include)
set(JSON_EVENT_EXAMPLE json_event_example.cpp)
set(RAW_EVENT_EXAMPLE raw_event_example.cpp)
set(RAW_EVENT_BATCH_EXAMPLE raw_event_batch_example.cpp ${LIB_SOURCE_FILES})
set(JSON_EVENT_BATCH_EXAMPLE json_event_batch_example.cpp ${LIB_SOURCE_FILES})
set(CPPRESTSDK_EXAMPLE cpprestsdk_example.cpp)
set(INDEXER_EXAMPLE indexer_example.cpp ${LIB_SOURCE_FILES})

add_executable(json_event_example ${JSON_EVENT_EXAMPLE})
add_executable(raw_event_example ${RAW_EVENT_EXAMPLE})
add_executable(json_event_batch_example ${JSON_EVENT_BATCH_EXAMPLE})
add_executable(raw_event_batch_example ${RAW_EVENT_BATCH_EXAMPLE})
add_executable(cpprestsdk_example ${CPPRESTSDK_EXAMPLE})
add_executable(indexer_example ${INDEXER_EXAMPLE})

link_directories(${OPENSSL_ROOT_DIR}/lib)
set(DEPENDENT_LIBS cpprest boost_system-mt boost_thread-mt boost_chrono-mt ${OPENSSL_ROOT_DIR}/lib/libcrypto.dylib ${OPENSSL_ROOT_DIR}/lib/libssl.dylib)

target_link_libraries(json_event_batch_example ${DEPENDENT_LIBS})
target_link_libraries(raw_event_batch_example ${DEPENDENT_LIBS})
target_link_libraries(cpprestsdk_example ${DEPENDENT_LIBS})
target_link_libraries(indexer_example ${DEPENDENT_LIBS})
